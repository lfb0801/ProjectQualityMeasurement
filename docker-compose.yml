services:
  structurizr:
    image: structurizr/lite
    volumes:
      - ./documentation:/usr/local/structurizr
    ports:
      - "9797:8080"
    networks:
      - pqm
    depends_on:
      - plantuml-server
    profiles:
      - docs

  plantuml-server:
    image: plantuml/plantuml-server:tomcat
    ports:
      - "9898:8080"
    networks:
      - pqm
    profiles:
      - docs

  postgresql:
    image: postgres:17
    container_name: postgres
    hostname: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - pqm
    profiles:
      - local

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    hostname: sonarqube
    read_only: true
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "grep -q 'SonarQube is operational' /opt/sonarqube/logs/sonar.log || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 5s
    networks:
      - pqm
    profiles:
      - local

  dbgate:
    image: dbgate/dbgate
    restart: always
    volumes:
      - dbgate-data:/root/.dbgate
    ports:
      - "80:3000"
    environment:
      CONNECTIONS: con1
      LABEL_con1: Sonar
      ENGINE_con1: postgres@dbgate-plugin-postgres
      URL_con1: postgresql://sonar:sonar@postgres:5432/sonar
    networks:
      - pqm
    profiles:
      - local

volumes:
  postgresql_data:
  dbgate-data:

networks:
  pqm:
    driver: bridge
